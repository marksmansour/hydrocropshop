<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}


<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        /* display: none; */ /* Let specific mobile/desktop containers handle visibility */
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
  
  /* Header Top Section */
  .header__top-section {
    width: 100%;
    background-color: #101010;
    padding: 0;
    margin: 0;
  }
  
  .header__top-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
    max-width: var(--page-width);
    margin: 0 auto;
  }
  
  /* Header Bottom Section */
  .header__bottom-section {
    width: 100%;
    background-color: #1d1d1d;
    padding: 0;
  }
  
  .header__bottom-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 0 3rem;
    min-height: 50px;
  }
  
  .header__menu-section {
    display: flex;
    align-items: center;
    flex-grow: 1;
  }
  
  .header__icons-section {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .header__search-section {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    min-width: 350px;
  }
  
  .header__contact-info {
    text-align: right;
    margin-bottom: 10px;
    color: #fff;
  }
  
  .header__contact-title {
    font-size: 14px;
    font-weight: 500;
    margin: 0;
  }
  
  .header__contact-phone {
    font-size: 20px;
    font-weight: 700;
    margin: 0;
    line-height: 1.2;
  }
  
  .header__search-bar {
    display: flex;
    border-radius: 4px;
    overflow: hidden;
    width: 100%;
  }
  
  .header__search-input {
    border: none;
    padding: 10px 15px;
    width: 280px;
    font-size: 16px;
  }
  
  /* Match newsletter field styling */
  .header__search-bar .field {
    position: relative;
    width: 100%;
    display: flex;
    align-items: center;
  }
  
  .header__search-bar .field__input {
    padding: 1rem 4rem 1rem 1rem;
    border: 0;
    font-size: 1.4rem;
    color: #000000;
    background-color: #ffffff;
    box-shadow: 0 0 0 0.1rem rgba(var(--color-foreground), 0.55);
    transition: box-shadow 0.2s ease;
    width: 100%;
    height: 40px;
    line-height: normal;
  }
  
  .header__search-bar .field__input:focus {
    box-shadow: 0 0 0 0.1rem rgba(var(--color-foreground), 0.75);
    outline: transparent;
  }
  
  .header__search-bar .field__input::placeholder {
    color: #666666;
    opacity: 1;
  }
  
  .header__search-bar .field__button {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 4rem;
    background-color: transparent;
    border: none;
    color: rgb(var(--color-foreground));
    cursor: pointer;
  }
  
  .header__search-bar .field__button .svg-wrapper {
    width: 1.6rem;
    color: #000000;
  }
  
  @media screen and (max-width: 749px) {
    .header__top-wrapper,
    .header__bottom-wrapper {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
    
    .header__search-input {
      width: 200px;
    }
    
    .header__contact-title {
      font-size: 14px;
    }
    
    .header__contact-phone {
      font-size: 20px;
    }
  }

  .mobile-menu-drawer-container {
    display: none;
  }
  
  .desktop-inline-menu {
     display: flex;
     align-items: center;
  }

  .header__search-modal-toggle-mobile {
      display: none;
  }


  @media screen and (max-width: 989px) {
    .header__top-wrapper {
        /* If contact info needs to be smaller or stack on mobile */
        align-items: flex-start; /* Align items to the top for stacking */
    }
    .header__search-section {
      min-width: auto; /* Allow search section to shrink on mobile */
      flex-direction: column; /* Stack contact info and search icon */
      align-items: flex-end; /* Align items to the right */
    }
     .header__search-section .header__contact-info {
        margin-bottom: 0.5rem; /* Space between contact and search icon */
        margin-right: 0; /* No right margin when stacked */
        flex-grow: 0; /* Don't allow contact info to take all space */
        width: 100%; /* Ensure contact info takes full width of this column */
        text-align: right; /* Keep text aligned to the right */
    }
    .header__search-bar { /* Hide DESKTOP search bar on mobile */
      display: none;
    }
    .header__search-modal-toggle-mobile { /* Show MOBILE search toggle */
      display: flex; /* Use flex to align icon properly */
      align-items: center;
      justify-content: flex-end; /* Align icon to the right under contact info */
      width: 100%; /* Ensure it takes full width of its parent column for alignment */
      padding-top: 0.25rem; /* Small space above search icon */
    }

    .desktop-inline-menu {
      display: none;
    }
    .mobile-menu-drawer-container {
      display: flex;
      align-items: center;
      height: 100%;
    }
    .mobile-menu-drawer-container header-drawer {
      margin-left: -1.2rem;
    }
    .header__bottom-wrapper {
       padding: 0 1.5rem;
    }
  }

  @media screen and (min-width: 990px) {
    .header__search-modal-toggle-mobile {
      display: none;
    }
    .mobile-menu-drawer-container {
        display: none;
    }
  }
</style>

{%- style -%}
  .header {
    padding: 0;
  }

  .section-header {
    position: sticky;
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header__top-wrapper {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

<{% if section.settings.sticky_header_type != 'none' %}sticky-header data-sticky-type="{{ section.settings.sticky_header_type }}"{% else %}div{% endif %} class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}">
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  
  <!-- Top Section with Logo and Search -->
  <div class="header__top-section">
    <div class="header__top-wrapper">
      <!-- Logo on Left -->
      <div class="header__logo-section">
        {%- if request.page_type == 'index' -%}
          <h1 class="header__heading">
        {%- endif -%}
            <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
              {%- if settings.logo != blank -%}
                <div class="header__heading-logo-wrapper">
                  {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                  {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                  {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
                  {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                  {{ settings.logo | image_url: width: 600 | image_tag:
                    class: 'header__heading-logo motion-reduce',
                    widths: widths,
                    height: logo_height,
                    width: settings.logo_width,
                    alt: logo_alt,
                    sizes: sizes,
                    preload: true
                  }}
                </div>
              {%- else -%}
                <span class="h2">{{ shop.name }}</span>
              {%- endif -%}
            </a>
        {%- if request.page_type == 'index' -%}
          </h1>
        {%- endif -%}
      </div>
      
      <!-- Search on Right -->
      <div class="header__search-section">
        <div class="header__contact-info">
          <p class="header__contact-title">Speak to an Expert</p>
          <p class="header__contact-phone">020 3488 0419</p>
        </div>
        <!-- Desktop Search Form - updated to match modal structure -->
        <div class="header__search-bar">
          {%- if settings.predictive_search_enabled -%}
            <predictive-search class="search-modal__form" data-loading-text="{{ 'accessibility.loading' | t }}">
          {%- else -%}
            <search-form class="search-modal__form">
          {%- endif -%}
          <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form">
            <div class="field">
              <input
                class="search__input field__input"
                id="SearchInput-Desktop"
                type="search"
                name="q"
                value="{{ search.terms | escape }}"
                placeholder="Search our products..."
                {%- if settings.predictive_search_enabled -%}
                  role="combobox"
                  aria-expanded="false"
                  aria-owns="predictive-search-results-desktop"
                  aria-controls="predictive-search-results-desktop"
                  aria-haspopup="listbox"
                  aria-autocomplete="list"
                  autocorrect="off"
                  autocomplete="off"
                  autocapitalize="off"
                  spellcheck="false"
                {%- endif -%}
              >
              <input type="hidden" name="options[prefix]" value="last">
              <button
                type="reset"
                class="reset__button field__button{% if search.terms == blank %} hidden{% endif %}"
                aria-label="{{ 'general.search.reset' | t }}"
              >
                <span class="svg-wrapper">
                  {{- 'icon-reset.svg' | inline_asset_content -}}
                </span>
              </button>
              <button class="search__button field__button" aria-label="{{ 'general.search.search' | t }}">
                <span class="svg-wrapper">
                  {{- 'icon-search.svg' | inline_asset_content -}}
                </span>
              </button>
            </div>

            {%- if settings.predictive_search_enabled -%}
              <div id="predictive-search-results-desktop" class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
                {%- render 'loading-spinner', class: 'predictive-search__loading-state' -%}
              </div>
              <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
            {%- endif -%}
          </form>
          {%- if settings.predictive_search_enabled -%}
            </predictive-search>
          {%- else -%}
            </search-form>
          {%- endif -%}
        </div>
        <div class="header__search-modal-toggle-mobile">
          {% render 'header-search', input_id: 'SearchModalMobile' %}
        </div>
      </div>
    </div>
  </div>
  
  <!-- Bottom Section with Menu and Icons -->
  <div class="header__bottom-section">
    <div class="header__bottom-wrapper">
      <!-- Menu on Left -->
      <div class="header__menu-section">
        <div class="mobile-menu-drawer-container">
          {%- if section.settings.menu != blank -%}
            {% render 'header-drawer' %}
          {%- endif -%}
        </div>
        
        <div class="desktop-inline-menu">
          {%- if section.settings.menu != blank -%}
            {%- if section.settings.menu_type_desktop == 'dropdown' -%}
              {% render 'header-dropdown-menu' %}
            {%- elsif section.settings.menu_type_desktop == 'mega' -%}
              {% render 'header-mega-menu' %}
            {%- else -%} 
              {% comment %} Removed 'drawer' for desktop as it's now mobile-only via header-drawer {% endcomment %}
              {% comment %} Fallback or specific handling if section.settings.menu_type_desktop == 'drawer' for some reason.
                  Original code would render header-drawer here too.
                  For now, assuming 'dropdown' or 'mega' are the primary desktop options.
              {% endcomment %}
            {%- endif -%}
          {%- endif -%}
        </div>
      </div>
      
      <!-- Account and Cart on Right -->
      <div class="header__icons-section">
        {%- if shop.customer_accounts_enabled -%}
          <a
            href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
            class="header__icon header__icon--account link focus-inset"
            rel="nofollow"
          >
            {%- if section.settings.enable_customer_avatar -%}
              <account-icon>
                {%- if customer and customer.has_avatar? -%}
                  {{ customer | avatar }}
                {%- else -%}
                  <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
                {%- endif -%}
              </account-icon>
            {%- else -%}
              <span class="svg-wrapper">{{ 'icon-account.svg' | inline_asset_content }}</span>
            {%- endif -%}
            <span class="visually-hidden">
              {%- liquid
                if customer
                  echo 'customer.account_fallback' | t
                else
                  echo 'customer.log_in' | t
                endif
              -%}
            </span>
          </a>
        {%- endif -%}

        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when '@app' -%}
              {% render block %}
          {%- endcase -%}
        {%- endfor -%}

        <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
          {% if cart == empty %}
            <span class="svg-wrapper">{{'icon-cart-empty.svg' | inline_asset_content }}</span>
          {% else %}
            <span class="svg-wrapper">{{'icon-cart.svg' | inline_asset_content }}</span>
          {% endif %}
          <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
          {%- if cart != empty -%}
            <div class="cart-count-bubble">
              {%- if cart.item_count < 100 -%}
                <span aria-hidden="true">{{ cart.item_count }}</span>
              {%- endif -%}
              <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
            </div>
          {%- endif -%}
        </a>
      </div>
    </div>
  </div>
</{% if section.settings.sticky_header_type != 'none' %}sticky-header{% else %}div{% endif %}>

{%- if settings.cart_type == "notification" -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme, desktop_menu_type: section.settings.menu_type_desktop -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      if (this.searchModal && typeof this.searchModal.close === 'function') {
        this.searchModal.close(false);
      }
    }
  }

  customElements.define('sticky-header', StickyHeader);

  document.addEventListener('DOMContentLoaded', function() {
    // Toggle dropdown menus
    const toggles = document.querySelectorAll('.nav-toggle');
    
    toggles.forEach(toggle => {
      toggle.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const targetId = this.getAttribute('data-toggle');
        const target = document.getElementById(targetId);
        
        if (target) {
          // Close all other dropdowns at the same level
          const siblings = target.parentElement.parentElement.querySelectorAll('.nav-dropdown, .nav-dropdown-submenu');
          siblings.forEach(sibling => {
            if (sibling !== target && sibling.classList.contains('active')) {
              sibling.classList.remove('active');
            }
          });
          
          // Toggle target
          target.classList.toggle('active');
        }
      });
    });
    
    // Close dropdowns when clicking outside
    document.addEventListener('click', function(e) {
      if (!e.target.closest('.nav-menu')) {
        document.querySelectorAll('.nav-dropdown, .nav-dropdown-submenu').forEach(dropdown => {
          dropdown.classList.remove('active');
        });
      }
    });
  });
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__7.content",
      "info": "t:sections.header.settings.header__7.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
